// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portfolio;

#nullable disable

namespace portfolio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20241218143748_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Education", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("84c93c07-d513-444b-aae4-2a9610fca86a"),
                            EnglishDesc = "Currently at 3rd year with an average of 9/10.",
                            HasEnglishDesc = true,
                            Institute = "Universidad Tecnologica Nacional",
                            IsActual = true,
                            NativeDesc = "Me encuentro en 3er año con un promedio de 9/10.",
                            Start = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Ingenieria en Sistemas de Informacion",
                            Type = 1,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3a8b2385-8057-4556-b447-9affc41021c6"),
                            End = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnglishDesc = "Topics:\n- Web Development and Applications (Introduction)\n- Static Front End Development (HTML, CSS, BOOTSTRAP, JavaScript y TypeScript)\n- Dynamic Front End Development (Angular)\n- BACKEND Development (MySQL + Java Spring)\n- Entity Relationship Diagram\n- JWT\n- DevOps",
                            HasEnglishDesc = true,
                            Institute = "Argentina Programa - INTI",
                            IsActual = false,
                            NativeDesc = "Temas:\n- Introducción a Desarrollo Web y Aplicaciones\n- Desarrollo Front End Estático (HTML, CSS, BOOTSTRAP, JavaScript y TypeScript)\n- Desarrollo Front End Dinámico (Angular)\n- Desarrollo Back End (MySQL+ Java Spring)\n- Diagrama Entidad Relación\n- JWT\n- DevOps",
                            Start = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Argentina Programa #YoProgramo",
                            Type = 4,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("e9e8f823-9741-48f3-9360-cf3d1adb2956"),
                            End = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnglishDesc = "We learned: C#, OOP, UML, .NET Framework, Entity Framework, Sql Server.\nFinal Project: https://github.com/tiagoramirez/tpFinalCursoDotNetNeorisUTN",
                            HasEnglishDesc = true,
                            Institute = "Universidad Tecnologica Nacional FRBA",
                            IsActual = false,
                            NativeDesc = "Aprendimos: C#, POO, UML, .NET Framework, Entity Framework, Sql Server.\nProyecto final: https://github.com/tiagoramirez/tpFinalCursoDotNetNeorisUTN",
                            Start = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Desarrollador .NET",
                            Type = 4,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("d00d4c4e-de55-4db6-af22-2c8afc99c3af"),
                            End = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnglishDesc = "REST API, Middlewares, C#, .NET 6, POO, Entity Framework, Sql Server.",
                            HasEnglishDesc = true,
                            Institute = "Platzi",
                            IsActual = false,
                            NativeDesc = "REST API, Middlewares, C#, .NET 6, POO, Entity Framework, Sql Server.",
                            Start = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = ".NET API's",
                            Type = 4,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("e708e8af-bc5d-4e22-8857-c897a94e021c"),
                            End = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnglishDesc = "C#, .NET 6, POO, Entity Framework, Fluent API, Sql Server.",
                            HasEnglishDesc = true,
                            Institute = "Platzi",
                            IsActual = false,
                            NativeDesc = "C#, .NET 6, POO, Entity Framework, Fluent API, Sql Server.",
                            Start = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Entity Framework",
                            Type = 4,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("26a9f437-e319-4218-aa44-140161b22431"),
                            End = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnglishDesc = "English classes. At the end we took the First Certificate in English exam (Cambridge Institute). My level was: B2.",
                            HasEnglishDesc = true,
                            Institute = "Instituto Nuestra Sra del Huerto - Cambridge",
                            IsActual = false,
                            NativeDesc = "Clases de ingles. Al final rendimos el examen First Certificate in English (Instituto Cambridge). Mi nivel fue: B2.",
                            Start = new DateTime(2011, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "English",
                            Type = 3,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experience", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("97826f17-a722-4059-8596-027ee258d3ac"),
                            Company = "Accusys",
                            EnglishDesc = "Maintenance of an Bank Cash Control system.\nManagement and optimization of queries, tables, stored procedures and views in MS SQL Server databases.\nTechnologies: WPF, Classic ASP, VBS, HTML, Javascript, Java and IIS.",
                            HasEnglishDesc = true,
                            IsActual = true,
                            NativeDesc = "Mantenimiento de un sistema para el Control del Efectivo Bancario.\nManejo y optimización de querys, tablas, stored procedures y vistas en bases de datos MS SQL Server.\nTecnologías: WPF, ASP Clásico, VBS, HTML, Javascript, Java y IIS.",
                            Position = "Analista Programador Junior",
                            Start = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("efdf00a2-e245-4ef2-8aaf-7aa503b8bf74"),
                            EnglishDesc = "Personal portfolio made with REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            HasEnglishDesc = true,
                            Name = "Portfolio",
                            NativeDesc = "Portfolio personal realizado con REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            Url = "https://tiagoramirez-portfolio.netlify.app/tiagoramirez",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("13dad750-ff04-41c6-88dc-7c63a8d92253"),
                            Name = "C#",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("59a1fd14-d980-400e-98e9-a1193f10f59f"),
                            Name = ".NET API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("af9ab891-c034-47c0-a626-13d2ed509d03"),
                            Name = ".NET CORE 6",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("01bff10b-52a7-4b57-ad0f-0f133152a715"),
                            Name = ".NET WPF",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("fcff6f01-948b-4bc0-a282-5cdd88e4f064"),
                            Name = "Entity Framework",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("2a5c60aa-11e9-47f4-89a6-614d4e60bcbb"),
                            Name = "Fluent API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b92ee2a1-1b20-494d-8226-774f193026a6"),
                            Name = "Migrations",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("52a44d73-4f89-4c1c-a75d-14d0628ab909"),
                            Name = "Middlewares",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("5666c5f5-3909-4451-b389-e036c088115a"),
                            Name = "Python",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6d0b4661-d4ef-4c6f-841a-cab0ef99865f"),
                            Name = "Java",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4d57dfff-a8ec-44d0-87d1-0715811a79e4"),
                            Name = "Java Spring",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("7ea656a8-14a6-4237-8277-995aec5c1955"),
                            Name = "SQL",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("8359daf2-cc0d-4e03-9baa-72e326f51488"),
                            Name = "MS SQL Server",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("cee20429-7bb4-4fcf-ba73-5b9d94d6ae72"),
                            Name = "MySql",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c99311bf-a884-45f2-bc3f-f8a7ee094833"),
                            Name = "HTML",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7a116620-167f-492a-bfcc-64cf7508ee88"),
                            Name = "CSS",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("0a5a8fb2-c215-4af8-aa16-b8e8d8d3f00a"),
                            Name = "Bootstrap",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("897ea43f-bb82-4520-8092-87078f4d9668"),
                            Name = "JavaScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("01965419-f26a-41a5-94ba-d996d4f1a15f"),
                            Name = "TypeScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("634694e0-512b-454d-9981-79930220821f"),
                            Name = "Angular",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7cee6703-8006-447f-a5f9-2739153eaec9"),
                            Name = "React",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ecb0514d-3cd4-4c8a-8b72-875cadda5e92"),
                            Name = "Redux Toolkit",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ecf0f4a4-4db2-4cb5-88e3-28bcb7b5e22b"),
                            Name = "React Router",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("eec9860d-4f68-4ecf-8283-944211113d0d"),
                            Name = "Vite",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("591db0f6-11a5-4e78-bdd2-f3b12453e0de"),
                            Name = "Vitest",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("82925956-b209-4a21-ac0f-994c16c851da"),
                            Name = "Testing library",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("be8a0b50-4968-4321-af62-e38a78a1fc05"),
                            Name = "TailwindCss",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("86278975-69b0-4f93-85ec-2dcfc580a35f"),
                            Name = "Git",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("f3c82a6e-3625-4f8d-ae73-bad613988c4d"),
                            Name = "Scrum",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("82747309-dd6d-4709-ab40-03a492eeb39c"),
                            Name = "Entity Relationship Diagram",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ea945c78-99c8-483d-8e3c-1207d5e2b92e"),
                            Name = "UML",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("51773eef-bce4-49d5-9d81-a2d2c37d443b"),
                            Name = "JWT",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ec5ff3db-1eb7-4de7-a434-9d3c1cee27b6"),
                            Name = "Linux",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("cb322319-2b06-43a2-bd21-e42a7b8c878b"),
                            Name = "REST API",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("b1dc9295-e48d-4def-aece-a9fec1e835f3"),
                            Name = "Node",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("61243c4e-e7ef-4d20-8af8-700f46806840"),
                            Name = "POO",
                            Type = 2
                        });
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SocialMedia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dcb2877b-ba91-48a1-a97e-e8ffbb3ecca9"),
                            Name = 1,
                            Url = "https://www.github.com/tiagoramirez/",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("b0d11911-26a0-4eb8-a298-68fcfba57f3a"),
                            Name = 3,
                            Url = "https://www.linkedin.com/in/tiagoramirezmar/",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishAboutMe")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishAboutMe")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnglishModeEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeAboutMe")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1",
                            Created = new DateTime(2024, 12, 18, 9, 37, 48, 291, DateTimeKind.Local).AddTicks(4667),
                            Email = "tiagoramirez2001@gmail.com",
                            EnglishAboutMe = "I'm Fullstack Developer with 1 year of experience in the IT area.\n\nMy main stack: React.js + Typescript + Node.js + .NET 6 API + SQL Server",
                            EnglishDesc = "FullStack Dev. || React + Typescript + .NET 6 + SQL Server + Node.js || Student in Systems Engineering - UTN 🇦🇷",
                            HasEnglishAboutMe = true,
                            HasEnglishDesc = true,
                            IsEnglishModeEnabled = true,
                            LocationCountry = "Argentina",
                            LocationState = "C.A.B.A.",
                            Name = "Tiago Alberto Ramirez Marchisio",
                            NativeAboutMe = "Soy Fullstack Developer con 1 año de experiencia en el área de TI.\n\nMi stack principal: React.js + Typescript + Node.js + .NET 6 API + SQL Server",
                            NativeDesc = "FullStack Dev. || React + Typescript + .NET 6 + SQL Server + Node.js || Ing. en Sistemas de Información - UTN 🇦🇷",
                            Status = true,
                            Username = "tiagoramirez"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("013479fa-ed0a-4a47-8be2-75cdc468e6c2"),
                            Percentage = 100,
                            SkillId = new Guid("13dad750-ff04-41c6-88dc-7c63a8d92253"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("0dfe7e24-29c4-4e7c-94e7-bcd254f767c7"),
                            Percentage = 90,
                            SkillId = new Guid("59a1fd14-d980-400e-98e9-a1193f10f59f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("f17b1313-f5f3-454b-94b3-79ce2f522393"),
                            Percentage = 90,
                            SkillId = new Guid("af9ab891-c034-47c0-a626-13d2ed509d03"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("da43e80d-2972-4616-a451-258743eedbf0"),
                            Percentage = 75,
                            SkillId = new Guid("01bff10b-52a7-4b57-ad0f-0f133152a715"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("56f6953a-c8b7-487b-a081-69fc60ea1da8"),
                            Percentage = 90,
                            SkillId = new Guid("fcff6f01-948b-4bc0-a282-5cdd88e4f064"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("d0d794dc-e71b-4303-ab21-30e9d2537bca"),
                            Percentage = 95,
                            SkillId = new Guid("2a5c60aa-11e9-47f4-89a6-614d4e60bcbb"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("6bffa3a9-2af8-4424-9d67-3466832687ef"),
                            Percentage = 100,
                            SkillId = new Guid("b92ee2a1-1b20-494d-8226-774f193026a6"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("5a23ba60-1059-46b9-8afe-d336252e91e6"),
                            Percentage = 90,
                            SkillId = new Guid("52a44d73-4f89-4c1c-a75d-14d0628ab909"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("6016cb7d-1fe7-4e49-a067-f0f80669737f"),
                            Percentage = 90,
                            SkillId = new Guid("6d0b4661-d4ef-4c6f-841a-cab0ef99865f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("22f2ce82-45e4-4ea9-a060-cdfa450b4a54"),
                            Percentage = 70,
                            SkillId = new Guid("4d57dfff-a8ec-44d0-87d1-0715811a79e4"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("c44313b3-c68f-465c-82c4-4d869abe9723"),
                            Percentage = 100,
                            SkillId = new Guid("7ea656a8-14a6-4237-8277-995aec5c1955"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("37e87c39-a0f7-4c90-a115-d3c37a64c1fe"),
                            Percentage = 100,
                            SkillId = new Guid("8359daf2-cc0d-4e03-9baa-72e326f51488"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("acfd4485-1038-4d99-89e9-74619a68c480"),
                            Percentage = 70,
                            SkillId = new Guid("cee20429-7bb4-4fcf-ba73-5b9d94d6ae72"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("40e02268-99a1-44d5-b509-506caaf84791"),
                            Percentage = 90,
                            SkillId = new Guid("c99311bf-a884-45f2-bc3f-f8a7ee094833"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("fdcaa748-4686-4d7a-9fbf-a210f85d9b86"),
                            Percentage = 80,
                            SkillId = new Guid("7a116620-167f-492a-bfcc-64cf7508ee88"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("4545cba4-da34-402b-a42d-8d7611b3f9f4"),
                            Percentage = 90,
                            SkillId = new Guid("897ea43f-bb82-4520-8092-87078f4d9668"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("30a14186-be3c-469f-a234-44530416acf8"),
                            Percentage = 100,
                            SkillId = new Guid("01965419-f26a-41a5-94ba-d996d4f1a15f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("31a9d050-acf3-4e6e-9434-47ae1eb30b7d"),
                            Percentage = 70,
                            SkillId = new Guid("634694e0-512b-454d-9981-79930220821f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3439ae8e-4bdb-43a1-9f0e-e7ad7d984075"),
                            Percentage = 95,
                            SkillId = new Guid("7cee6703-8006-447f-a5f9-2739153eaec9"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("997bcc46-3b28-4372-a17d-3bd6d2885a75"),
                            Percentage = 95,
                            SkillId = new Guid("ecb0514d-3cd4-4c8a-8b72-875cadda5e92"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("00dc2e10-effc-49e1-ba7d-b77c2be5981f"),
                            Percentage = 95,
                            SkillId = new Guid("ecf0f4a4-4db2-4cb5-88e3-28bcb7b5e22b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("8128da83-47a4-460c-9067-d425789b73c6"),
                            Percentage = 80,
                            SkillId = new Guid("eec9860d-4f68-4ecf-8283-944211113d0d"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("85139a16-a5c0-4d3d-8c07-f5b7d2879ca5"),
                            Percentage = 80,
                            SkillId = new Guid("591db0f6-11a5-4e78-bdd2-f3b12453e0de"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3c0873aa-c02b-4a9d-ac46-e59de57785c4"),
                            Percentage = 80,
                            SkillId = new Guid("82925956-b209-4a21-ac0f-994c16c851da"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("0139d285-023d-4116-bf51-ad03875ed501"),
                            Percentage = 95,
                            SkillId = new Guid("be8a0b50-4968-4321-af62-e38a78a1fc05"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("2964e16f-494e-45a9-a69a-8dfb777b9862"),
                            Percentage = 90,
                            SkillId = new Guid("86278975-69b0-4f93-85ec-2dcfc580a35f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("255b9400-14ce-43e5-b7c7-60e15a279429"),
                            Percentage = 90,
                            SkillId = new Guid("f3c82a6e-3625-4f8d-ae73-bad613988c4d"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("0931ef69-1fe6-44bd-9a4b-812439517b58"),
                            Percentage = 100,
                            SkillId = new Guid("82747309-dd6d-4709-ab40-03a492eeb39c"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("e6325170-74fd-4232-8328-368563adf011"),
                            Percentage = 100,
                            SkillId = new Guid("ea945c78-99c8-483d-8e3c-1207d5e2b92e"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("700ea12c-02c5-41dd-aea4-60d5b8ca222c"),
                            Percentage = 90,
                            SkillId = new Guid("51773eef-bce4-49d5-9d81-a2d2c37d443b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("ad42cfb4-6c45-4cb9-ada1-4f5858a1d31d"),
                            Percentage = 80,
                            SkillId = new Guid("ec5ff3db-1eb7-4de7-a434-9d3c1cee27b6"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("0a855738-98dd-404c-9259-8bb4d1054bde"),
                            Percentage = 90,
                            SkillId = new Guid("cb322319-2b06-43a2-bd21-e42a7b8c878b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("d3a09362-a32a-4fd0-961f-413236541ad6"),
                            Percentage = 85,
                            SkillId = new Guid("b1dc9295-e48d-4def-aece-a9fec1e835f3"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("01ef8666-8bf7-49eb-9d7b-60f1c0788d57"),
                            Percentage = 100,
                            SkillId = new Guid("61243c4e-e7ef-4d20-8af8-700f46806840"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Experiences")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("SocialMedias")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.HasOne("portfolio.Models.Skill", "Skill")
                        .WithMany("User_Skills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Skills")
                        .HasForeignKey("UserId");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Navigation("User_Skills");
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("Projects");

                    b.Navigation("Skills");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
